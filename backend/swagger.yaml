openapi: 3.0.3
info:
  title: Erudity
  description: |-
    API documentation for Erudity API
  version: 1.0.0
tags:
  - name: resources
    description: Represents learning materials
  - name: pings
    description: Represents simple message
paths:
  /pings:
    get:
      tags:
        - pings
      summary: Get all pings
      description: Retrieves all pings and does not paginate the results
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Paginated'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Ping'
    post:
      tags:
        - pings
      summary: Create new ping
      description: Adds new ping
      requestBody:
        description: Requires a message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PingDTO'
        required: true
      responses:
        '201':
          description: Successful ping creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'
  /pings/{id}:
    put:
      tags:
        - pings
      summary: Update single ping
      description: Update single ping
      parameters:
        - name: id
          in: path
          description: ObjectID of resource
          required: true
          schema:
            type: string
            format: ObjectID
      responses:
        '200':
          description: Single ping updated & returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'
    delete:
      tags:
        - pings
      summary: Delete single ping
      description: Delete single ping
      parameters:
        - name: id
          in: path
          description: ObjectID of ping
          required: true
          schema:
            type: string
            format: ObjectID
      responses:
        '204':
          description: Single ping sucessfully deleted
        '404':
          description: Ping not found
          content:
            application/json:
              schema:
                type: string
                example: 'Ping not found'
  /resources:
    get:
      tags: 
        - resources
      summary: Get list of resources
      description: View all resources
      responses:
        '200':    # status code
          description: A JSON array of resources
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Resource'
    post:
      tags:
        - resources
      summary: Create new resource
      description: Adds new resource
      requestBody:
        description: Resource DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceDTO'
        required: true
      responses:
        '201':
          description: Successful resource creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          description: Invalid resource data
          content:
            application/json:
              schema:
                type: string
                example: Invalid resource data
  /resources/{resourceId}:
    get:
      tags: 
        - resources
      summary: Get data for specific resource
      description: View single resource
      parameters:
        - name: resourceId
          in: path
          description: ObjectID of resource
          required: true
          schema:
            type: string
            format: ObjectID
      responses:
        '200':
          description: Single resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
    put:
      tags:
        - resources
      summary: Update single resource
      description: Update single resource
      parameters:
        - name: resourceId
          in: path
          description: ObjectID of resource
          required: true
          schema:
            type: string
            format: ObjectID
      responses:
        '200':
          description: Single resource updated & returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          description: Failed resource creation or update
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Id or data'
    delete:
      tags:
        - resources
      summary: Delete single resource
      description: Delete single resource
      parameters:
        - name: resourceId
          in: path
          description: ObjectID of resource
          required: true
          schema:
            type: string
            format: ObjectID
      responses:
        '204':
          description: Single resource sucessfully deleted
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                type: string
                example: 'Resource not found'
components:
  schemas:
    # src: https://blog.nitzano.com/generic-swagger-pagination
    Paginated:
      type: object
      properties:
        count:
          type: number
        pages:
          type: number
        results:
          type: array
          items: {}
    PingDTO:
      type: object
      properties:
        message:
          type: string
        date:
          type: string
          format: date-time
    Ping:
      allOf:
        - $ref: '#/components/schemas/PingDTO'
        - type: object
          properties:
            id:
              type: string
              example: "507f1f77bcf86cd799439011"
              
    ResourceDTO:
      type: object
      properties:
        creators:
          type: array
          items:
            type: string
          example: [Maximilian Schwarzm√ºller, Manuel Lorenz]
        description:
          type: string
          example: "Learn CSS for the first time or brush up your CSS skills and dive in even deeper."
        platform:
          type: array
          items:
            type: string
            example: [Udemy, Academind]
        createdAt:
          type: string
          format: date-time
          example: null
        updatedAt:
          type: string
          format: date
          example: '2023-01-05'
        price:
          type: number
          example: "9.99"
        difficulty:
          type: string
          example: "Beginner"
        avgRating:
          type: number
          example: "3.33"
        totalRatings:
          type: number
          example: "25"
        format:
          type: string
          example: video
        hours:
          type: number
          example: 22.5
        tags:
          type: array
          items:
            type: string
            example: [CSS, HTML]
        subject:
          type: string
          example: programming
    Resource:
      allOf:
        - $ref: '#/components/schemas/ResourceDTO'
        - type: object
          properties:
            id:
              type: string
              example: "507f1f77bcf86cd799439011"