name: Heroku CICD

on:
    pull_request:
        branches: ["main"]

jobs:
    backend-checks:
      name: Backend Checks
      runs-on: ubuntu-latest
      env:
          NODE_OPTIONS: --experimental-vm-modules
          NODE_ENV: test
      steps:
          - uses: actions/checkout@v3
          - name: Set up Node 18
            uses: actions/setup-node@v3
            with:
              node-version: 18
          - name: Run tests & linters
            env: 
              TEST_MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
            run: |
              cd backend
              npm ci
              npm run lint:check
              npm run format:check
              npm run test

    frontend-checks:
        name: Frontend Checks
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Node 18
              uses: actions/setup-node@v3
              with:
                node-version: 18
            - run: |
                cd frontend
                npm ci
                npm run lint:check
                npm run format:check
                npm run test

    build-image:
        name: Build image
        runs-on: ubuntu-latest
        needs: [backend-checks, frontend-checks]
        env: 
            HEROKU_REGISTRY_IMAGE: registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                ref: main

            - name: Log in to the Heroku Container Registry
              run: docker login -u _ -p ${HEROKU_AUTH_TOKEN} registry.heroku.com
              env:
                HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_AUTH_TOKEN }}

            - name: Pull images
              run: docker pull ${{ env.HEROKU_REGISTRY_IMAGE }}:latest || true

            - name: Build images
              run: |
                docker build \
                --cache-from ${{ env.HEROKU_REGISTRY_IMAGE }}:latest \
                --tag ${{ env.HEROKU_REGISTRY_IMAGE }}:latest \
                --file Dockerfile \
                --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
                "."
            # src: https://docs.docker.com/build/ci/github-actions/share-image-jobs/
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            
            - name: Build and export
              uses: docker/build-push-action@v4
              with:
                context: .
                tags: ${{ env.HEROKU_REGISTRY_IMAGE }}:latest 
                outputs: type=docker,dest=/tmp/myimage.tar

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                name: myimage
                path: /tmp/myimage.tar

    deploy-image:
      name: Deploy to Heroku
      runs-on: ubuntu-latest
      needs: [build-image]
      env:
        HEROKU_REGISTRY_IMAGE: registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: main
    
        # - name: Log in to the Heroku Container Registry
        #   run: docker login -u _ -p ${HEROKU_AUTH_TOKEN} registry.heroku.com
        #   env:
        #     HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_AUTH_TOKEN }}

        # - name: Pull images
        #   run: docker pull ${{ env.HEROKU_REGISTRY_IMAGE }}:latest || true

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            name: myimage
            path: /tmp

        - name: Push to the registry
          run: |
            docker load --input /tmp/myimage.tar
            docker push ${{ env.HEROKU_REGISTRY_IMAGE }}:latest

        - name: Set environment variables
          run: |
            echo "HEROKU_REGISTRY_IMAGE=${{ env.HEROKU_REGISTRY_IMAGE }}" >> $GITHUB_ENV
            echo "HEROKU_AUTH_TOKEN=${{ secrets.HEROKU_AUTH_TOKEN }}" >> $GITHUB_ENV
            echo "HEROKU_APP_NAME=${{ secrets.HEROKU_APP_NAME }}" >> $GITHUB_ENV

        - name: Release
          run: |
            chmod +x ./release.sh
            ./release.sh